---
layout: basic
title: Setting up Eclipse for Developing AeroGear Powered Android Applications 
---

== Setting up Eclipse for Developing AeroGear Powered Android Applications 

This guide is geared toward using the command line, and it also assumes that git and mvn are on your PATH.  If you are using Windows, you can use your tools of choice.

Please see the link:../AndroidRequirements[Android Library requirements]

=== Downloading and Importing AeroGear

AeroGear is a Maven based build project.  With the exception of one set up set, we eschew Maven for a more traditional Android + Eclipse experience.  As such we will not be using or need a2e and a2e-android.

==== Getting the source with git
When you clone your sources, be sure to NOT download them into your Eclipse workspace directory.

[source,bash]
----
 git clone https://github.com/aerogear/aerogear-android.git
 cd aerogear-android/
 mvn dependency:copy; #This will download all of the required dependancies and place them in /libs
----

==== Importing the project into Eclipse

* Right click in project panel 

* Select Import 

image:img/android_eclipse_import_001.png[Eclipse Import Menu]

* Android -> Existing Android Code into Workspace -> Next

image:img/android_eclipse_import_002.png[Import New Android Project]

* Browse -> Your code -> check "Copy projects into workspace" 

image:img/android_eclipse_import_003.png[Configure Your Import]

* May have to set compiler compliance to 1.6 to clear some errors

image:img/android_eclipse_import_004.png[Java Compiler Properties]

* In aerogear-android project set "Is Library"(Properties -> Android -> Is Library)

image:img/android_eclipse_import_005.png[Android Properties]

* In your project add aerogear-android library (Properties -> Android -> Add)

image:img/android_eclipse_import_006.png[Android Properties]

* Voil√†, everything is set - now have fun!	