---
layout: basic
title: AeroGear Data Sync
---

AeroGear DataSync Roadmap
=========================
:Author: Daniel Bevenius

0.1.0 (Oct, 2014) Revision control     
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This first release is really not categorized as _Data Sync_, as there is no synchronization going on. Instead
this version will be a conflict detection protocol between a server and AeroGear 
client APIs. + 

This goal of this version is to require minimal changes to existing servers and no special message format 
required between the client and the server.


AeroGear
^^^^^^^^
* link:https://issues.jboss.org/browse/AEROGEAR-XXX[AEROGEAR-XXX] _Document server side contract for conflict detection/handling_. +
The only requirements on the server side is that it be able to detect when a conflict occurs and return a
HTTP 409 Conflict in response. The body/payload of the response must contains the server latest version of the 
data.

Android
^^^^^^^
* link:https://issues.jboss.org/browse/AGDROID-XXX[AGDROID-XXX] _Conflict resolution handling_ + 
The API should be able to detect a 409 Conflict and allow the user to take action using callbacks. + 
Callback functions should be _success_, _conflict_, and _error_.


iOS
^^^

* link:https://issues.jboss.org/browse/AGIOS-XXX[AGIOS-XXX]  _Conflict resolution handling_ + 
The API should be able to detect a 409 Conflict and allow the user to take action using callbacks. + 
Callback functions should be _success_, _conflict_, and _error_.


JavaScript
^^^^^^^^^^  

* link:https://issues.jboss.org/browse/AGJS-XXX[AGJS-XXX]  _Conflict resolution handling_ + 
The API should be able to detect a 409 Conflict and allow the user to take action using callbacks. + 
Callback functions should be _success_, _conflict_, and _error_.


0.2.0 (Jan, 2015) 
~~~~~~~~~~~~~~~~~
This version is an extension of version 0.1.0 where the addition of a DiffMatchPatch resolver for 
each client platform.

Android
^^^^^^^

* link:https://issues.jboss.org/browse/AGDROID-XXX[AGDROID-XXX] _DiffMatchPatch conflict resolver_ + 
A concrete conflict resolver that can uses DiffMatchPatch to resolve conflict. This resolver should be 
configurable to allow for auto-merging.

iOS
^^^

* link:https://issues.jboss.org/browse/AGIOS-XXX[AGIOS-XXX] _DiffMatchPatch conflict resolver_ + 
A concrete conflict resolver that can uses DiffMatchPatch to resolve conflict. This resolver should be 
configurable to allow for auto-merging.


JavaScript
^^^^^^^^^^

* link:https://issues.jboss.org/browse/AGJS-XXX[AGJS-XXX] _DiffMatchPatch conflict resolver_ + 
A concrete conflict resolver that can uses DiffMatchPatch to resolve conflict. This resolver should be 
configurable to allow for auto-merging.

0.3.0 (Apr, 2015) 
~~~~~~~~~~~~~~~~~
This version introduces a message protocol between the client and server where the server can push 
updates to the client.  
This requires more changes to the server side as it must conform to the message format defined.

AeroGear
^^^^^^^^
[[aerogear-msg-format]]
* link:https://issues.jboss.org/browse/AEROGEAR-XXX[AEROGEAR-XXX] Define message format for passing messages between client and server.  +

Android
^^^^^^^

* link:https://issues.jboss.org/browse/AGDROID-XXX[AGDROID-XXX] Implement message format handling + 
When sending data to the server the client library must package the data according to the defined
message format as specified in <<aerogear-msg-format,AEROGEAR-XXX>>.


iOS
^^^

* link:https://issues.jboss.org/browse/AGIOS-XXX[AGIOS-XXX] Implement message format handling + 
When sending data to the server the client library must package the data according to the defined
message format as specified in <<aerogear-msg-format,AEROGEAR-XXX>>.

JavaScript
^^^^^^^^^^

* link:https://issues.jboss.org/browse/AGJS-XXX[AGJS-XXX] Implement message format handling + 
When sending data to the server the client library must package the data according to the defined
message format as specified in <<aerogear-msg-format,AEROGEAR-XXX>>.
